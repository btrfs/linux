name: CI

on:
  pull_request:
    branches: [ "master", "ci**" ]

concurrency: one_at_a_time_gents

permissions:
  contents: read
  checks: write
  id-token: write

jobs:
  build:
    runs-on: [self-hosted, linux, x64, vmhost]
    steps:
    - uses: actions/checkout@v3
    - name: copy system config
      run: copy-config.sh ${{ github.workspace }}
    - name: make olddefconfig
      run: make olddefconfig
    - name: make
      run: make -j32

  build-arm:
    runs-on: [self-hosted, linux, ARM64, vmhost]
    steps:
    - uses: actions/checkout@v3
    - name: copy system config
      run: copy-config.sh ${{ github.workspace }}
    - name: make olddefconfig
      run: make olddefconfig
    - name: make
      run: make -j32

  deploy:
    runs-on: [self-hosted, linux, x64, vmhost]
    needs: build
    strategy:
      matrix:
        vm: [xfstests5, xfstests6, xfstests7, xfstests8, xfstests9, xfstests10]
    steps:
    - name: make sure the vm is alive
      run: check-vm-health.sh ${{ matrix.vm }}
    - name: update btrfs-progs
      run: update-btrfs-progs.sh ${{ matrix.vm }}
    - name: update xfstests
      run: update-xfstests.sh ${{ matrix.vm }}
    - name: update kernel
      run: update-kernel.sh ${{ matrix.vm }} ${{ github.workspace }}

  deploy-arm:
    runs-on: [self-hosted, linux, ARM64, vmhost]
    needs: build-arm
    strategy:
      matrix:
        vm: [xfstests11, xfstests12]
    steps:
    - name: make sure the vm is alive
      run: check-vm-health.sh ${{ matrix.vm }}
    - name: update btrfs-progs
      run: update-btrfs-progs.sh ${{ matrix.vm }}
    - name: update xfstests
      run: update-xfstests.sh ${{ matrix.vm }}
    - name: update vms
      run: update-kernel.sh ${{ matrix.vm }} ${{ github.workspace }}

  test-zoned:
    runs-on: [self-hosted, linux, x64, zoned]
    needs: deploy
    defaults:
      run:
        working-directory: /root/fstests
    strategy:
      fail-fast: false
    steps:
    - name: run xfstests
      run: ./unfuck-signal ./check -E EXCLUDE -E EXCLUDE.zoned -R xunit -s btrfs_zoned btrfs/001
    - name: upload test report
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: junit-test-results-btrfs_zoned
        path: /root/fstests/results/btrfs_zoned/result.xml
        retention-days: 1

  test:
    runs-on: [self-hosted, linux, x64, vm]
    needs: deploy
    defaults:
      run:
        working-directory: /root/fstests
    strategy:
      fail-fast: false
      matrix:
        config_name: [btrfs_normal, btrfs_compress, btrfs_holes_spacecache, btrfs_holes_spacecache_compress, btrfs_block_group_tree]
    steps:
    - name: run xfstests
      run: ./unfuck-signal ./check -E EXCLUDE -R xunit -s ${{ matrix.config_name }} btrfs/001
    - name: upload test report
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: junit-test-results-${{ matrix.config_name }}
        path: /root/fstests/results/${{ matrix.config_name }}/result.xml
        retention-days: 1

  test-arm:
    runs-on: [self-hosted, linux, ARM64, vm]
    needs: deploy-arm
    defaults:
      run:
        working-directory: /root/fstests
    strategy:
      fail-fast: false
      matrix:
        config_name: [btrfs_subpage_normal, btrfs_subpage_compress]
    steps:
    - name: run xfstests
      run: ./unfuck-signal ./check -E EXCLUDE -E EXCLUDE.arm -R xunit -s ${{ matrix.config_name }} btrfs/001
    - name: upload test report
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: junit-test-results-${{ matrix.config_name }}
        path: /root/fstests/results/${{ matrix.config_name }}/result.xml
        retention-days: 1

---
name: report
on:
  workflow_run:
    workflows: [CI]
    types: [completed]

permissions:
  checks: write

jobs:
  checks:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        config_name: [btrfs_nromal, btrfs_compress, btrfs_holes_spacecache, btrfs_holes_spacecache_compress, btrfs_block_group_tree, btrfs_zoned, btrfs_subpage_normal, btrfs_subpage_compress]
    steps:
      - name: Download test report
        uses: dawidd6/action-download-artifact@v2
          with: junit-test-results-${{ matrix.config_name }}
          workflow: ${{ github.event.workflow.id }}
          run_id: ${{ github.event.workflow_run.id }}
    - name: Publish Test Report
      uses: mikepenz/action-junit-report@v3
      with:
        commit: ${{github.event.workflow_run.head_sha}}
        report_paths: "**/root/fstests/results/*/result.xml"
